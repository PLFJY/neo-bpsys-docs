### YamlMime:ManagedReference
items:
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl
  commentId: T:neo_bpsys_wpf.Controls.TextSettingsEditControl
  id: TextSettingsEditControl
  parent: neo_bpsys_wpf.Controls
  children:
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.#ctor(System.Collections.Generic.List{System.Windows.Media.FontFamily},neo_bpsys_wpf.Models.TextSettings,System.Action,System.Action,System.Action)
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.ApplyCommand
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.CloseCommand
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.FontList
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.FontWeightList
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.InitializeComponent
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanged(System.String)
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanging(System.ComponentModel.PropertyChangingEventArgs)
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanging(System.String)
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.SaveCommand
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedColor
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontFamily
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontSize
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontWeight
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier@,System.Threading.Tasks.Task,System.Action{System.Threading.Tasks.Task},System.String)
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier@,System.Threading.Tasks.Task,System.String)
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion``1(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier{``0}@,System.Threading.Tasks.Task{``0},System.Action{System.Threading.Tasks.Task{``0}},System.String)
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion``1(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier{``0}@,System.Threading.Tasks.Task{``0},System.String)
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``1(``0,``0,System.Action{``0},System.String)
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0},System.Action{``0},System.String)
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``1(``0@,``0,System.Collections.Generic.IEqualityComparer{``0},System.String)
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``1(``0@,``0,System.String)
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``2(``1,``1,System.Collections.Generic.IEqualityComparer{``1},``0,System.Action{``0,``1},System.String)
  - neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``2(``1,``1,``0,System.Action{``0,``1},System.String)
  langs:
  - csharp
  - vb
  name: TextSettingsEditControl
  nameWithType: TextSettingsEditControl
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl
  type: Class
  source:
    id: TextSettingsEditControl
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservableObjectGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 6
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  summary: TextSettingsEditControl.xaml 的交互逻辑
  example: []
  syntax:
    content: >-
      [ObservableObject]

      public class TextSettingsEditControl : UserControl, ISupportInitialize, INotifyPropertyChanged, INotifyPropertyChanging
    content.vb: >-
      <ObservableObject>

      Public Class TextSettingsEditControl Inherits UserControl Implements ISupportInitialize, INotifyPropertyChanged, INotifyPropertyChanging
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Media.Visual
  - System.Windows.UIElement
  - System.Windows.FrameworkElement
  - System.Windows.Controls.Control
  - System.Windows.Controls.ContentControl
  - System.Windows.Controls.UserControl
  implements:
  - System.ComponentModel.ISupportInitialize
  - System.ComponentModel.INotifyPropertyChanged
  - System.ComponentModel.INotifyPropertyChanging
  attributes:
  - type: CommunityToolkit.Mvvm.ComponentModel.ObservableObjectAttribute
    ctor: CommunityToolkit.Mvvm.ComponentModel.ObservableObjectAttribute.#ctor
    arguments: []
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.#ctor(System.Collections.Generic.List{System.Windows.Media.FontFamily},neo_bpsys_wpf.Models.TextSettings,System.Action,System.Action,System.Action)
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.#ctor(System.Collections.Generic.List{System.Windows.Media.FontFamily},neo_bpsys_wpf.Models.TextSettings,System.Action,System.Action,System.Action)
  id: '#ctor(System.Collections.Generic.List{System.Windows.Media.FontFamily},neo_bpsys_wpf.Models.TextSettings,System.Action,System.Action,System.Action)'
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: TextSettingsEditControl(List<FontFamily>, TextSettings?, Action, Action, Action)
  nameWithType: TextSettingsEditControl.TextSettingsEditControl(List<FontFamily>, TextSettings?, Action, Action, Action)
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.TextSettingsEditControl(System.Collections.Generic.List<System.Windows.Media.FontFamily>, neo_bpsys_wpf.Models.TextSettings?, System.Action, System.Action, System.Action)
  type: Constructor
  source:
    remote:
      path: neo-bpsys-wpf/Controls/TextSettingsEditControl.xaml.cs
      branch: dev-feat/multiBanMap
      repo: https://github.com/plfjy/neo-bpsys-wpf.git
    id: .ctor
    path: ../neo-bpsys-wpf/neo-bpsys-wpf/Controls/TextSettingsEditControl.xaml.cs
    startLine: 21
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  syntax:
    content: public TextSettingsEditControl(List<FontFamily> fontList, TextSettings? textSettings, Action applyAction, Action saveAction, Action cancelAction)
    parameters:
    - id: fontList
      type: System.Collections.Generic.List{System.Windows.Media.FontFamily}
    - id: textSettings
      type: neo_bpsys_wpf.Models.TextSettings
    - id: applyAction
      type: System.Action
    - id: saveAction
      type: System.Action
    - id: cancelAction
      type: System.Action
    content.vb: Public Sub New(fontList As List(Of FontFamily), textSettings As TextSettings, applyAction As Action, saveAction As Action, cancelAction As Action)
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.#ctor*
  nameWithType.vb: TextSettingsEditControl.New(List(Of FontFamily), TextSettings, Action, Action, Action)
  fullName.vb: neo_bpsys_wpf.Controls.TextSettingsEditControl.New(System.Collections.Generic.List(Of System.Windows.Media.FontFamily), neo_bpsys_wpf.Models.TextSettings, System.Action, System.Action, System.Action)
  name.vb: New(List(Of FontFamily), TextSettings, Action, Action, Action)
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.FontWeightList
  commentId: P:neo_bpsys_wpf.Controls.TextSettingsEditControl.FontWeightList
  id: FontWeightList
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: FontWeightList
  nameWithType: TextSettingsEditControl.FontWeightList
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.FontWeightList
  type: Property
  source:
    remote:
      path: neo-bpsys-wpf/Controls/TextSettingsEditControl.xaml.cs
      branch: dev-feat/multiBanMap
      repo: https://github.com/plfjy/neo-bpsys-wpf.git
    id: FontWeightList
    path: ../neo-bpsys-wpf/neo-bpsys-wpf/Controls/TextSettingsEditControl.xaml.cs
    startLine: 88
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  syntax:
    content: public List<FontWeight> FontWeightList { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Windows.FontWeight}
    content.vb: Public ReadOnly Property FontWeightList As List(Of FontWeight)
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.FontWeightList*
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.InitializeComponent
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.InitializeComponent
  id: InitializeComponent
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: InitializeComponent()
  nameWithType: TextSettingsEditControl.InitializeComponent()
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.InitializeComponent()
  type: Method
  source:
    remote:
      path: neo-bpsys-wpf/obj/Release/net9.0-windows7.0/Controls/TextSettingsEditControl.g.cs
      branch: dev-feat/multiBanMap
      repo: https://github.com/plfjy/neo-bpsys-wpf.git
    id: InitializeComponent
    path: ../neo-bpsys-wpf/neo-bpsys-wpf/obj/Release/net9.0-windows7.0/Controls/TextSettingsEditControl.g.cs
    startLine: 53
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  summary: InitializeComponent
  example: []
  syntax:
    content: public void InitializeComponent()
    content.vb: Public Sub InitializeComponent()
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.InitializeComponent*
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.FontList
  commentId: P:neo_bpsys_wpf.Controls.TextSettingsEditControl.FontList
  id: FontList
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: FontList
  nameWithType: TextSettingsEditControl.FontList
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.FontList
  type: Property
  source:
    id: FontList
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 9
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  example: []
  syntax:
    content: public List<FontFamily> FontList { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Windows.Media.FontFamily}
    content.vb: Public Property FontList As List(Of FontFamily)
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.FontList*
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedColor
  commentId: P:neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedColor
  id: SelectedColor
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: SelectedColor
  nameWithType: TextSettingsEditControl.SelectedColor
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedColor
  type: Property
  source:
    id: SelectedColor
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 31
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  example: []
  syntax:
    content: public Color SelectedColor { get; set; }
    parameters: []
    return:
      type: System.Windows.Media.Color
    content.vb: Public Property SelectedColor As Color
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedColor*
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontFamily
  commentId: P:neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontFamily
  id: SelectedFontFamily
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: SelectedFontFamily
  nameWithType: TextSettingsEditControl.SelectedFontFamily
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontFamily
  type: Property
  source:
    id: SelectedFontFamily
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 52
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  example: []
  syntax:
    content: public FontFamily SelectedFontFamily { get; set; }
    parameters: []
    return:
      type: System.Windows.Media.FontFamily
    content.vb: Public Property SelectedFontFamily As FontFamily
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontFamily*
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontSize
  commentId: P:neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontSize
  id: SelectedFontSize
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: SelectedFontSize
  nameWithType: TextSettingsEditControl.SelectedFontSize
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontSize
  type: Property
  source:
    id: SelectedFontSize
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 74
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  example: []
  syntax:
    content: public string SelectedFontSize { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SelectedFontSize As String
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontSize*
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontWeight
  commentId: P:neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontWeight
  id: SelectedFontWeight
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: SelectedFontWeight
  nameWithType: TextSettingsEditControl.SelectedFontWeight
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontWeight
  type: Property
  source:
    id: SelectedFontWeight
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 96
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  example: []
  syntax:
    content: public FontWeight SelectedFontWeight { get; set; }
    parameters: []
    return:
      type: System.Windows.FontWeight
    content.vb: Public Property SelectedFontWeight As FontWeight
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontWeight*
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SaveCommand
  commentId: P:neo_bpsys_wpf.Controls.TextSettingsEditControl.SaveCommand
  id: SaveCommand
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: SaveCommand
  nameWithType: TextSettingsEditControl.SaveCommand
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SaveCommand
  type: Property
  source:
    id: SaveCommand
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.RelayCommandGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.Save.g.cs
    startLine: 12
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  summary: Gets an <xref href="CommunityToolkit.Mvvm.Input.IRelayCommand" data-throw-if-not-resolved="false"></xref> instance wrapping <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.Save" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public IRelayCommand SaveCommand { get; }
    parameters: []
    return:
      type: CommunityToolkit.Mvvm.Input.IRelayCommand
    content.vb: Public ReadOnly Property SaveCommand As IRelayCommand
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.SaveCommand*
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.CloseCommand
  commentId: P:neo_bpsys_wpf.Controls.TextSettingsEditControl.CloseCommand
  id: CloseCommand
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: CloseCommand
  nameWithType: TextSettingsEditControl.CloseCommand
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.CloseCommand
  type: Property
  source:
    id: CloseCommand
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.RelayCommandGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.Close.g.cs
    startLine: 12
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  summary: Gets an <xref href="CommunityToolkit.Mvvm.Input.IRelayCommand" data-throw-if-not-resolved="false"></xref> instance wrapping <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.Close" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public IRelayCommand CloseCommand { get; }
    parameters: []
    return:
      type: CommunityToolkit.Mvvm.Input.IRelayCommand
    content.vb: Public ReadOnly Property CloseCommand As IRelayCommand
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.CloseCommand*
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.ApplyCommand
  commentId: P:neo_bpsys_wpf.Controls.TextSettingsEditControl.ApplyCommand
  id: ApplyCommand
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: ApplyCommand
  nameWithType: TextSettingsEditControl.ApplyCommand
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.ApplyCommand
  type: Property
  source:
    id: ApplyCommand
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.RelayCommandGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.Apply.g.cs
    startLine: 12
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  summary: Gets an <xref href="CommunityToolkit.Mvvm.Input.IRelayCommand" data-throw-if-not-resolved="false"></xref> instance wrapping <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.Apply" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public IRelayCommand ApplyCommand { get; }
    parameters: []
    return:
      type: CommunityToolkit.Mvvm.Input.IRelayCommand
    content.vb: Public ReadOnly Property ApplyCommand As IRelayCommand
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.ApplyCommand*
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged
  commentId: E:neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged
  id: PropertyChanged
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: TextSettingsEditControl.PropertyChanged
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged
  type: Event
  source:
    id: PropertyChanged
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservableObjectGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 11
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  summary: Occurs when a property value changes.
  example: []
  syntax:
    content: public event PropertyChangedEventHandler? PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging
  commentId: E:neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging
  id: PropertyChanging
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: PropertyChanging
  nameWithType: TextSettingsEditControl.PropertyChanging
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging
  type: Event
  source:
    id: PropertyChanging
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservableObjectGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 15
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  summary: Occurs when a property value is changing.
  example: []
  syntax:
    content: public event PropertyChangingEventHandler? PropertyChanging
    return:
      type: System.ComponentModel.PropertyChangingEventHandler
    content.vb: Public Event PropertyChanging As PropertyChangingEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanging.PropertyChanging
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  id: OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: OnPropertyChanged(PropertyChangedEventArgs)
  nameWithType: TextSettingsEditControl.OnPropertyChanged(PropertyChangedEventArgs)
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  type: Method
  source:
    id: OnPropertyChanged
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservableObjectGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 20
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  summary: Raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
    parameters:
    - id: e
      type: System.ComponentModel.PropertyChangedEventArgs
      description: The input <xref href="System.ComponentModel.PropertyChangedEventArgs" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Protected Overridable Sub OnPropertyChanged(e As PropertyChangedEventArgs)
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanged*
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanging(System.ComponentModel.PropertyChangingEventArgs)
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanging(System.ComponentModel.PropertyChangingEventArgs)
  id: OnPropertyChanging(System.ComponentModel.PropertyChangingEventArgs)
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: OnPropertyChanging(PropertyChangingEventArgs)
  nameWithType: TextSettingsEditControl.OnPropertyChanging(PropertyChangingEventArgs)
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanging(System.ComponentModel.PropertyChangingEventArgs)
  type: Method
  source:
    id: OnPropertyChanging
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservableObjectGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 32
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  summary: Raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: protected virtual void OnPropertyChanging(PropertyChangingEventArgs e)
    parameters:
    - id: e
      type: System.ComponentModel.PropertyChangingEventArgs
      description: The input <xref href="System.ComponentModel.PropertyChangingEventArgs" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Protected Overridable Sub OnPropertyChanging(e As PropertyChangingEventArgs)
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanging*
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanged(System.String)
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanged(System.String)
  id: OnPropertyChanged(System.String)
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: OnPropertyChanged(string?)
  nameWithType: TextSettingsEditControl.OnPropertyChanged(string?)
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanged(string?)
  type: Method
  source:
    id: OnPropertyChanged
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservableObjectGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 44
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  summary: Raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: protected void OnPropertyChanged(string? propertyName = null)
    parameters:
    - id: propertyName
      type: System.String
      description: (optional) The name of the property that changed.
    content.vb: Protected Sub OnPropertyChanged(propertyName As String = Nothing)
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanged*
  nameWithType.vb: TextSettingsEditControl.OnPropertyChanged(String)
  fullName.vb: neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanged(String)
  name.vb: OnPropertyChanged(String)
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanging(System.String)
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanging(System.String)
  id: OnPropertyChanging(System.String)
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: OnPropertyChanging(string?)
  nameWithType: TextSettingsEditControl.OnPropertyChanging(string?)
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanging(string?)
  type: Method
  source:
    id: OnPropertyChanging
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservableObjectGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 56
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  summary: Raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: protected void OnPropertyChanging(string? propertyName = null)
    parameters:
    - id: propertyName
      type: System.String
      description: (optional) The name of the property that changed.
    content.vb: Protected Sub OnPropertyChanging(propertyName As String = Nothing)
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanging*
  nameWithType.vb: TextSettingsEditControl.OnPropertyChanging(String)
  fullName.vb: neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanging(String)
  name.vb: OnPropertyChanging(String)
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``1(``0@,``0,System.String)
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``1(``0@,``0,System.String)
  id: SetProperty``1(``0@,``0,System.String)
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: SetProperty<T>(ref T, T, string?)
  nameWithType: TextSettingsEditControl.SetProperty<T>(ref T, T, string?)
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty<T>(ref T, T, string?)
  type: Method
  source:
    id: SetProperty
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservableObjectGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 78
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  summary: >-
    Compares the current and new values for a given property. If the value has changed,

    raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging" data-throw-if-not-resolved="false"></xref> event, updates the property with the new

    value, then raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged" data-throw-if-not-resolved="false"></xref> event.
  remarks: >-
    The <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging" data-throw-if-not-resolved="false"></xref> and <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged" data-throw-if-not-resolved="false"></xref> events are not raised

    if the current and new value for the target property are the same.
  example: []
  syntax:
    content: protected bool SetProperty<T>(ref T field, T newValue, string? propertyName = null)
    parameters:
    - id: field
      type: '{T}'
      description: The field storing the property's value.
    - id: newValue
      type: '{T}'
      description: The property's value after the change occurred.
    - id: propertyName
      type: System.String
      description: (optional) The name of the property that changed.
    typeParameters:
    - id: T
      description: The type of the property that changed.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the property was changed, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Protected Function SetProperty(Of T)(field As T, newValue As T, propertyName As String = Nothing) As Boolean
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty*
  nameWithType.vb: TextSettingsEditControl.SetProperty(Of T)(T, T, String)
  fullName.vb: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty(Of T)(T, T, String)
  name.vb: SetProperty(Of T)(T, T, String)
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``1(``0@,``0,System.Collections.Generic.IEqualityComparer{``0},System.String)
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``1(``0@,``0,System.Collections.Generic.IEqualityComparer{``0},System.String)
  id: SetProperty``1(``0@,``0,System.Collections.Generic.IEqualityComparer{``0},System.String)
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: SetProperty<T>(ref T, T, IEqualityComparer<T>, string?)
  nameWithType: TextSettingsEditControl.SetProperty<T>(ref T, T, IEqualityComparer<T>, string?)
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty<T>(ref T, T, System.Collections.Generic.IEqualityComparer<T>, string?)
  type: Method
  source:
    id: SetProperty
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservableObjectGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 106
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  summary: >-
    Compares the current and new values for a given property. If the value has changed,

    raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging" data-throw-if-not-resolved="false"></xref> event, updates the property with the new

    value, then raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged" data-throw-if-not-resolved="false"></xref> event.

    See additional notes about this overload in <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty%60%601(%60%600%40%2c%60%600%2cSystem.String)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: protected bool SetProperty<T>(ref T field, T newValue, IEqualityComparer<T> comparer, string? propertyName = null)
    parameters:
    - id: field
      type: '{T}'
      description: The field storing the property's value.
    - id: newValue
      type: '{T}'
      description: The property's value after the change occurred.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{T}}
      description: The <xref href="System.Collections.Generic.IEqualityComparer%601" data-throw-if-not-resolved="false"></xref> instance to use to compare the input values.
    - id: propertyName
      type: System.String
      description: (optional) The name of the property that changed.
    typeParameters:
    - id: T
      description: The type of the property that changed.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the property was changed, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Protected Function SetProperty(Of T)(field As T, newValue As T, comparer As IEqualityComparer(Of T), propertyName As String = Nothing) As Boolean
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty*
  nameWithType.vb: TextSettingsEditControl.SetProperty(Of T)(T, T, IEqualityComparer(Of T), String)
  fullName.vb: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty(Of T)(T, T, System.Collections.Generic.IEqualityComparer(Of T), String)
  name.vb: SetProperty(Of T)(T, T, IEqualityComparer(Of T), String)
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``1(``0,``0,System.Action{``0},System.String)
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``1(``0,``0,System.Action{``0},System.String)
  id: SetProperty``1(``0,``0,System.Action{``0},System.String)
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: SetProperty<T>(T, T, Action<T>, string?)
  nameWithType: TextSettingsEditControl.SetProperty<T>(T, T, Action<T>, string?)
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty<T>(T, T, System.Action<T>, string?)
  type: Method
  source:
    id: SetProperty
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservableObjectGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 145
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  summary: >-
    Compares the current and new values for a given property. If the value has changed,

    raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging" data-throw-if-not-resolved="false"></xref> event, updates the property with the new

    value, then raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged" data-throw-if-not-resolved="false"></xref> event.

    This overload is much less efficient than <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty%60%601(%60%600%40%2c%60%600%2cSystem.String)" data-throw-if-not-resolved="false"></xref> and it

    should only be used when the former is not viable (eg. when the target property being

    updated does not directly expose a backing field that can be passed by reference).

    For performance reasons, it is recommended to use a stateful callback if possible through

    the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty%60%602(%60%601%2c%60%601%2c%60%600%2cSystem.Action%7b%60%600%2c%60%601%7d%2cSystem.String)" data-throw-if-not-resolved="false"></xref> whenever possible

    instead of this overload, as that will allow the C# compiler to cache the input callback and

    reduce the memory allocations. More info on that overload are available in the related XML

    docs. This overload is here for completeness and in cases where that is not applicable.
  remarks: >-
    The <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging" data-throw-if-not-resolved="false"></xref> and <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged" data-throw-if-not-resolved="false"></xref> events are not raised

    if the current and new value for the target property are the same.
  example: []
  syntax:
    content: protected bool SetProperty<T>(T oldValue, T newValue, Action<T> callback, string? propertyName = null)
    parameters:
    - id: oldValue
      type: '{T}'
      description: The current property value.
    - id: newValue
      type: '{T}'
      description: The property's value after the change occurred.
    - id: callback
      type: System.Action{{T}}
      description: A callback to invoke to update the property value.
    - id: propertyName
      type: System.String
      description: (optional) The name of the property that changed.
    typeParameters:
    - id: T
      description: The type of the property that changed.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the property was changed, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Protected Function SetProperty(Of T)(oldValue As T, newValue As T, callback As Action(Of T), propertyName As String = Nothing) As Boolean
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty*
  nameWithType.vb: TextSettingsEditControl.SetProperty(Of T)(T, T, Action(Of T), String)
  fullName.vb: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty(Of T)(T, T, System.Action(Of T), String)
  name.vb: SetProperty(Of T)(T, T, Action(Of T), String)
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0},System.Action{``0},System.String)
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0},System.Action{``0},System.String)
  id: SetProperty``1(``0,``0,System.Collections.Generic.IEqualityComparer{``0},System.Action{``0},System.String)
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: SetProperty<T>(T, T, IEqualityComparer<T>, Action<T>, string?)
  nameWithType: TextSettingsEditControl.SetProperty<T>(T, T, IEqualityComparer<T>, Action<T>, string?)
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty<T>(T, T, System.Collections.Generic.IEqualityComparer<T>, System.Action<T>, string?)
  type: Method
  source:
    id: SetProperty
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservableObjectGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 174
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  summary: >-
    Compares the current and new values for a given property. If the value has changed,

    raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging" data-throw-if-not-resolved="false"></xref> event, updates the property with the new

    value, then raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged" data-throw-if-not-resolved="false"></xref> event.

    See additional notes about this overload in <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty%60%601(%60%600%2c%60%600%2cSystem.Action%7b%60%600%7d%2cSystem.String)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: protected bool SetProperty<T>(T oldValue, T newValue, IEqualityComparer<T> comparer, Action<T> callback, string? propertyName = null)
    parameters:
    - id: oldValue
      type: '{T}'
      description: The current property value.
    - id: newValue
      type: '{T}'
      description: The property's value after the change occurred.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{T}}
      description: The <xref href="System.Collections.Generic.IEqualityComparer%601" data-throw-if-not-resolved="false"></xref> instance to use to compare the input values.
    - id: callback
      type: System.Action{{T}}
      description: A callback to invoke to update the property value.
    - id: propertyName
      type: System.String
      description: (optional) The name of the property that changed.
    typeParameters:
    - id: T
      description: The type of the property that changed.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the property was changed, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Protected Function SetProperty(Of T)(oldValue As T, newValue As T, comparer As IEqualityComparer(Of T), callback As Action(Of T), propertyName As String = Nothing) As Boolean
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty*
  nameWithType.vb: TextSettingsEditControl.SetProperty(Of T)(T, T, IEqualityComparer(Of T), Action(Of T), String)
  fullName.vb: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty(Of T)(T, T, System.Collections.Generic.IEqualityComparer(Of T), System.Action(Of T), String)
  name.vb: SetProperty(Of T)(T, T, IEqualityComparer(Of T), Action(Of T), String)
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``2(``1,``1,``0,System.Action{``0,``1},System.String)
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``2(``1,``1,``0,System.Action{``0,``1},System.String)
  id: SetProperty``2(``1,``1,``0,System.Action{``0,``1},System.String)
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: SetProperty<TModel, T>(T, T, TModel, Action<TModel, T>, string?)
  nameWithType: TextSettingsEditControl.SetProperty<TModel, T>(T, T, TModel, Action<TModel, T>, string?)
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty<TModel, T>(T, T, TModel, System.Action<TModel, T>, string?)
  type: Method
  source:
    id: SetProperty
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservableObjectGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 243
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  summary: >-
    Compares the current and new values for a given nested property. If the value has changed,

    raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging" data-throw-if-not-resolved="false"></xref> event, updates the property and then raises the

    <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged" data-throw-if-not-resolved="false"></xref> event. The behavior mirrors that of <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty%60%601(%60%600%40%2c%60%600%2cSystem.String)" data-throw-if-not-resolved="false"></xref>,

    with the difference being that this method is used to relay properties from a wrapped model in the

    current instance. This type is useful when creating wrapping, bindable objects that operate over

    models that lack support for notification (eg. for CRUD operations).

    Suppose we have this model (eg. for a database row in a table):

    <pre><code class="lang-csharp">public class Person

    {
        public string Name { get; set; }
    }</code></pre>

    We can then use a property to wrap instances of this type into our observable model (which supports

    notifications), injecting the notification to the properties of that model, like so:

    <pre><code class="lang-csharp">[ObservableObject]

    public class BindablePerson

    {
        public Model { get; }

        public BindablePerson(Person model)
        {
            Model = model;
        }

        public string Name
        {
            get =&gt; Model.Name;
            set =&gt; Set(Model.Name, value, Model, (model, name) =&gt; model.Name = name);
        }
    }</code></pre>

    This way we can then use the wrapping object in our application, and all those "proxy" properties will

    also raise notifications when changed. Note that this method is not meant to be a replacement for

    <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty%60%601(%60%600%40%2c%60%600%2cSystem.String)" data-throw-if-not-resolved="false"></xref>, and it should only be used when relaying properties to a model that

    doesn't support notifications, and only if you can't implement notifications to that model directly (eg. by having

    it inherit from ObservableObject). The syntax relies on passing the target model and a stateless callback

    to allow the C# compiler to cache the function, which results in much better performance and no memory usage.
  remarks: >-
    The <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging" data-throw-if-not-resolved="false"></xref> and <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged" data-throw-if-not-resolved="false"></xref> events are not

    raised if the current and new value for the target property are the same.
  example: []
  syntax:
    content: 'protected bool SetProperty<TModel, T>(T oldValue, T newValue, TModel model, Action<TModel, T> callback, string? propertyName = null) where TModel : class'
    parameters:
    - id: oldValue
      type: '{T}'
      description: The current property value.
    - id: newValue
      type: '{T}'
      description: The property's value after the change occurred.
    - id: model
      type: '{TModel}'
      description: The model containing the property being updated.
    - id: callback
      type: System.Action{{TModel},{T}}
      description: The callback to invoke to set the target property value, if a change has occurred.
    - id: propertyName
      type: System.String
      description: (optional) The name of the property that changed.
    typeParameters:
    - id: TModel
      description: The type of model whose property (or field) to set.
    - id: T
      description: The type of property (or field) to set.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the property was changed, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Protected Function SetProperty(Of TModel As Class, T)(oldValue As T, newValue As T, model As TModel, callback As Action(Of TModel, T), propertyName As String = Nothing) As Boolean
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty*
  nameWithType.vb: TextSettingsEditControl.SetProperty(Of TModel, T)(T, T, TModel, Action(Of TModel, T), String)
  fullName.vb: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty(Of TModel, T)(T, T, TModel, System.Action(Of TModel, T), String)
  name.vb: SetProperty(Of TModel, T)(T, T, TModel, Action(Of TModel, T), String)
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``2(``1,``1,System.Collections.Generic.IEqualityComparer{``1},``0,System.Action{``0,``1},System.String)
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``2(``1,``1,System.Collections.Generic.IEqualityComparer{``1},``0,System.Action{``0,``1},System.String)
  id: SetProperty``2(``1,``1,System.Collections.Generic.IEqualityComparer{``1},``0,System.Action{``0,``1},System.String)
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: SetProperty<TModel, T>(T, T, IEqualityComparer<T>, TModel, Action<TModel, T>, string?)
  nameWithType: TextSettingsEditControl.SetProperty<TModel, T>(T, T, IEqualityComparer<T>, TModel, Action<TModel, T>, string?)
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty<TModel, T>(T, T, System.Collections.Generic.IEqualityComparer<T>, TModel, System.Action<TModel, T>, string?)
  type: Method
  source:
    id: SetProperty
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservableObjectGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 276
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  summary: >-
    Compares the current and new values for a given nested property. If the value has changed,

    raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging" data-throw-if-not-resolved="false"></xref> event, updates the property and then raises the

    <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged" data-throw-if-not-resolved="false"></xref> event. The behavior mirrors that of <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty%60%601(%60%600%40%2c%60%600%2cSystem.String)" data-throw-if-not-resolved="false"></xref>,

    with the difference being that this method is used to relay properties from a wrapped model in the

    current instance. See additional notes about this overload in <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty%60%602(%60%601%2c%60%601%2c%60%600%2cSystem.Action%7b%60%600%2c%60%601%7d%2cSystem.String)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'protected bool SetProperty<TModel, T>(T oldValue, T newValue, IEqualityComparer<T> comparer, TModel model, Action<TModel, T> callback, string? propertyName = null) where TModel : class'
    parameters:
    - id: oldValue
      type: '{T}'
      description: The current property value.
    - id: newValue
      type: '{T}'
      description: The property's value after the change occurred.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{T}}
      description: The <xref href="System.Collections.Generic.IEqualityComparer%601" data-throw-if-not-resolved="false"></xref> instance to use to compare the input values.
    - id: model
      type: '{TModel}'
      description: The model containing the property being updated.
    - id: callback
      type: System.Action{{TModel},{T}}
      description: The callback to invoke to set the target property value, if a change has occurred.
    - id: propertyName
      type: System.String
      description: (optional) The name of the property that changed.
    typeParameters:
    - id: TModel
      description: The type of model whose property (or field) to set.
    - id: T
      description: The type of property (or field) to set.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the property was changed, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Protected Function SetProperty(Of TModel As Class, T)(oldValue As T, newValue As T, comparer As IEqualityComparer(Of T), model As TModel, callback As Action(Of TModel, T), propertyName As String = Nothing) As Boolean
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty*
  nameWithType.vb: TextSettingsEditControl.SetProperty(Of TModel, T)(T, T, IEqualityComparer(Of T), TModel, Action(Of TModel, T), String)
  fullName.vb: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty(Of TModel, T)(T, T, System.Collections.Generic.IEqualityComparer(Of T), TModel, System.Action(Of TModel, T), String)
  name.vb: SetProperty(Of TModel, T)(T, T, IEqualityComparer(Of T), TModel, Action(Of TModel, T), String)
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier@,System.Threading.Tasks.Task,System.String)
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier@,System.Threading.Tasks.Task,System.String)
  id: SetPropertyAndNotifyOnCompletion(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier@,System.Threading.Tasks.Task,System.String)
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: SetPropertyAndNotifyOnCompletion(ref TaskNotifier?, Task?, string?)
  nameWithType: TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(ref TextSettingsEditControl.TaskNotifier?, Task?, string?)
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(ref neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier?, System.Threading.Tasks.Task?, string?)
  type: Method
  source:
    id: SetPropertyAndNotifyOnCompletion
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservableObjectGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 326
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  summary: >-
    Compares the current and new values for a given field (which should be the backing

    field for a property). If the value has changed, raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging" data-throw-if-not-resolved="false"></xref>

    event, updates the field and then raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged" data-throw-if-not-resolved="false"></xref> event.

    The behavior mirrors that of <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty%60%601(%60%600%40%2c%60%600%2cSystem.String)" data-throw-if-not-resolved="false"></xref>, with the difference being that

    this method will also monitor the new value of the property (a generic <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>) and will also

    raise the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged" data-throw-if-not-resolved="false"></xref> again for the target property when it completes.

    This can be used to update bindings observing that <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> or any of its properties.

    This method and its overload specifically rely on the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier" data-throw-if-not-resolved="false"></xref> type, which needs

    to be used in the backing field for the target <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> property. The field doesn't need to be

    initialized, as this method will take care of doing that automatically. The <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier" data-throw-if-not-resolved="false"></xref>

    type also includes an implicit operator, so it can be assigned to any <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> instance directly.

    Here is a sample property declaration using this method:

    <pre><code class="lang-csharp">private TaskNotifier myTask;


    public Task MyTask

    {
        get =&gt; myTask;
        private set =&gt; SetAndNotifyOnCompletion(ref myTask, value);
    }</code></pre>
  remarks: >-
    The <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging" data-throw-if-not-resolved="false"></xref> and <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged" data-throw-if-not-resolved="false"></xref> events are not raised if the current

    and new value for the target property are the same. The return value being <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> only

    indicates that the new value being assigned to <code class="paramref">taskNotifier</code> is different than the previous one,

    and it does not mean the new <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> instance passed as argument is in any particular state.
  example: []
  syntax:
    content: protected bool SetPropertyAndNotifyOnCompletion(ref TextSettingsEditControl.TaskNotifier? taskNotifier, Task? newValue, string? propertyName = null)
    parameters:
    - id: taskNotifier
      type: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier
      description: The field notifier to modify.
    - id: newValue
      type: System.Threading.Tasks.Task
      description: The property's value after the change occurred.
    - id: propertyName
      type: System.String
      description: (optional) The name of the property that changed.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the property was changed, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Protected Function SetPropertyAndNotifyOnCompletion(taskNotifier As TextSettingsEditControl.TaskNotifier, newValue As Task, propertyName As String = Nothing) As Boolean
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion*
  nameWithType.vb: TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(TextSettingsEditControl.TaskNotifier, Task, String)
  fullName.vb: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier, System.Threading.Tasks.Task, String)
  name.vb: SetPropertyAndNotifyOnCompletion(TaskNotifier, Task, String)
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier@,System.Threading.Tasks.Task,System.Action{System.Threading.Tasks.Task},System.String)
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier@,System.Threading.Tasks.Task,System.Action{System.Threading.Tasks.Task},System.String)
  id: SetPropertyAndNotifyOnCompletion(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier@,System.Threading.Tasks.Task,System.Action{System.Threading.Tasks.Task},System.String)
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: SetPropertyAndNotifyOnCompletion(ref TaskNotifier?, Task?, Action<Task?>, string?)
  nameWithType: TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(ref TextSettingsEditControl.TaskNotifier?, Task?, Action<Task?>, string?)
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(ref neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier?, System.Threading.Tasks.Task?, System.Action<System.Threading.Tasks.Task?>, string?)
  type: Method
  source:
    id: SetPropertyAndNotifyOnCompletion
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservableObjectGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 351
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  summary: >-
    Compares the current and new values for a given field (which should be the backing

    field for a property). If the value has changed, raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging" data-throw-if-not-resolved="false"></xref>

    event, updates the field and then raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged" data-throw-if-not-resolved="false"></xref> event.

    This method is just like <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier%40%2cSystem.Threading.Tasks.Task%2cSystem.String)" data-throw-if-not-resolved="false"></xref>,

    with the difference being an extra <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref> parameter with a callback being invoked

    either immediately, if the new task has already completed or is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, or upon completion.
  remarks: >-
    The <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging" data-throw-if-not-resolved="false"></xref> and <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged" data-throw-if-not-resolved="false"></xref> events are not raised

    if the current and new value for the target property are the same.
  example: []
  syntax:
    content: protected bool SetPropertyAndNotifyOnCompletion(ref TextSettingsEditControl.TaskNotifier? taskNotifier, Task? newValue, Action<Task?> callback, string? propertyName = null)
    parameters:
    - id: taskNotifier
      type: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier
      description: The field notifier to modify.
    - id: newValue
      type: System.Threading.Tasks.Task
      description: The property's value after the change occurred.
    - id: callback
      type: System.Action{System.Threading.Tasks.Task}
      description: A callback to invoke to update the property value.
    - id: propertyName
      type: System.String
      description: (optional) The name of the property that changed.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the property was changed, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Protected Function SetPropertyAndNotifyOnCompletion(taskNotifier As TextSettingsEditControl.TaskNotifier, newValue As Task, callback As Action(Of Task), propertyName As String = Nothing) As Boolean
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion*
  nameWithType.vb: TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(TextSettingsEditControl.TaskNotifier, Task, Action(Of Task), String)
  fullName.vb: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier, System.Threading.Tasks.Task, System.Action(Of System.Threading.Tasks.Task), String)
  name.vb: SetPropertyAndNotifyOnCompletion(TaskNotifier, Task, Action(Of Task), String)
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion``1(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier{``0}@,System.Threading.Tasks.Task{``0},System.String)
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion``1(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier{``0}@,System.Threading.Tasks.Task{``0},System.String)
  id: SetPropertyAndNotifyOnCompletion``1(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier{``0}@,System.Threading.Tasks.Task{``0},System.String)
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: SetPropertyAndNotifyOnCompletion<T>(ref TaskNotifier<T>?, Task<T>?, string?)
  nameWithType: TextSettingsEditControl.SetPropertyAndNotifyOnCompletion<T>(ref TextSettingsEditControl.TaskNotifier<T>?, Task<T>?, string?)
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion<T>(ref neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier<T>?, System.Threading.Tasks.Task<T>?, string?)
  type: Method
  source:
    id: SetPropertyAndNotifyOnCompletion
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservableObjectGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 393
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  summary: >-
    Compares the current and new values for a given field (which should be the backing

    field for a property). If the value has changed, raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging" data-throw-if-not-resolved="false"></xref>

    event, updates the field and then raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged" data-throw-if-not-resolved="false"></xref> event.

    The behavior mirrors that of <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty%60%601(%60%600%40%2c%60%600%2cSystem.String)" data-throw-if-not-resolved="false"></xref>, with the difference being that

    this method will also monitor the new value of the property (a generic <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref>) and will also

    raise the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged" data-throw-if-not-resolved="false"></xref> again for the target property when it completes.

    This can be used to update bindings observing that <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> or any of its properties.

    This method and its overload specifically rely on the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier%601" data-throw-if-not-resolved="false"></xref> type, which needs

    to be used in the backing field for the target <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> property. The field doesn't need to be

    initialized, as this method will take care of doing that automatically. The <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier%601" data-throw-if-not-resolved="false"></xref>

    type also includes an implicit operator, so it can be assigned to any <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> instance directly.

    Here is a sample property declaration using this method:

    <pre><code class="lang-csharp">private TaskNotifier&lt;int&gt; myTask;


    public Task&lt;int&gt; MyTask

    {
        get =&gt; myTask;
        private set =&gt; SetAndNotifyOnCompletion(ref myTask, value);
    }</code></pre>
  remarks: >-
    The <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging" data-throw-if-not-resolved="false"></xref> and <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged" data-throw-if-not-resolved="false"></xref> events are not raised if the current

    and new value for the target property are the same. The return value being <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> only

    indicates that the new value being assigned to <code class="paramref">taskNotifier</code> is different than the previous one,

    and it does not mean the new <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> instance passed as argument is in any particular state.
  example: []
  syntax:
    content: protected bool SetPropertyAndNotifyOnCompletion<T>(ref TextSettingsEditControl.TaskNotifier<T>? taskNotifier, Task<T>? newValue, string? propertyName = null)
    parameters:
    - id: taskNotifier
      type: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier{{T}}
      description: The field notifier to modify.
    - id: newValue
      type: System.Threading.Tasks.Task{{T}}
      description: The property's value after the change occurred.
    - id: propertyName
      type: System.String
      description: (optional) The name of the property that changed.
    typeParameters:
    - id: T
      description: The type of result for the <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> to set and monitor.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the property was changed, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Protected Function SetPropertyAndNotifyOnCompletion(Of T)(taskNotifier As TextSettingsEditControl.TaskNotifier(Of T), newValue As Task(Of T), propertyName As String = Nothing) As Boolean
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion*
  nameWithType.vb: TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(Of T)(TextSettingsEditControl.TaskNotifier(Of T), Task(Of T), String)
  fullName.vb: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(Of T)(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier(Of T), System.Threading.Tasks.Task(Of T), String)
  name.vb: SetPropertyAndNotifyOnCompletion(Of T)(TaskNotifier(Of T), Task(Of T), String)
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion``1(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier{``0}@,System.Threading.Tasks.Task{``0},System.Action{System.Threading.Tasks.Task{``0}},System.String)
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion``1(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier{``0}@,System.Threading.Tasks.Task{``0},System.Action{System.Threading.Tasks.Task{``0}},System.String)
  id: SetPropertyAndNotifyOnCompletion``1(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier{``0}@,System.Threading.Tasks.Task{``0},System.Action{System.Threading.Tasks.Task{``0}},System.String)
  parent: neo_bpsys_wpf.Controls.TextSettingsEditControl
  langs:
  - csharp
  - vb
  name: SetPropertyAndNotifyOnCompletion<T>(ref TaskNotifier<T>?, Task<T>?, Action<Task<T>?>, string?)
  nameWithType: TextSettingsEditControl.SetPropertyAndNotifyOnCompletion<T>(ref TextSettingsEditControl.TaskNotifier<T>?, Task<T>?, Action<Task<T>?>, string?)
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion<T>(ref neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier<T>?, System.Threading.Tasks.Task<T>?, System.Action<System.Threading.Tasks.Task<T>?>, string?)
  type: Method
  source:
    id: SetPropertyAndNotifyOnCompletion
    path: CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.ObservableObjectGenerator\neo_bpsys_wpf.Controls.TextSettingsEditControl.g.cs
    startLine: 419
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Controls
  summary: >-
    Compares the current and new values for a given field (which should be the backing

    field for a property). If the value has changed, raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging" data-throw-if-not-resolved="false"></xref>

    event, updates the field and then raises the <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged" data-throw-if-not-resolved="false"></xref> event.

    This method is just like <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion%60%601(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier%7b%60%600%7d%40%2cSystem.Threading.Tasks.Task%7b%60%600%7d%2cSystem.String)" data-throw-if-not-resolved="false"></xref>,

    with the difference being an extra <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref> parameter with a callback being invoked

    either immediately, if the new task has already completed or is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, or upon completion.
  remarks: >-
    The <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging" data-throw-if-not-resolved="false"></xref> and <xref href="neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged" data-throw-if-not-resolved="false"></xref> events are not raised

    if the current and new value for the target property are the same.
  example: []
  syntax:
    content: protected bool SetPropertyAndNotifyOnCompletion<T>(ref TextSettingsEditControl.TaskNotifier<T>? taskNotifier, Task<T>? newValue, Action<Task<T>?> callback, string? propertyName = null)
    parameters:
    - id: taskNotifier
      type: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier{{T}}
      description: The field notifier to modify.
    - id: newValue
      type: System.Threading.Tasks.Task{{T}}
      description: The property's value after the change occurred.
    - id: callback
      type: System.Action{System.Threading.Tasks.Task{{T}}}
      description: A callback to invoke to update the property value.
    - id: propertyName
      type: System.String
      description: (optional) The name of the property that changed.
    typeParameters:
    - id: T
      description: The type of result for the <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> to set and monitor.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the property was changed, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Protected Function SetPropertyAndNotifyOnCompletion(Of T)(taskNotifier As TextSettingsEditControl.TaskNotifier(Of T), newValue As Task(Of T), callback As Action(Of Task(Of T)), propertyName As String = Nothing) As Boolean
  overload: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion*
  nameWithType.vb: TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(Of T)(TextSettingsEditControl.TaskNotifier(Of T), Task(Of T), Action(Of Task(Of T)), String)
  fullName.vb: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(Of T)(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier(Of T), System.Threading.Tasks.Task(Of T), System.Action(Of System.Threading.Tasks.Task(Of T)), String)
  name.vb: SetPropertyAndNotifyOnCompletion(Of T)(TaskNotifier(Of T), Task(Of T), Action(Of Task(Of T)), String)
references:
- uid: neo_bpsys_wpf.Controls
  commentId: N:neo_bpsys_wpf.Controls
  href: neo_bpsys_wpf.html
  name: neo_bpsys_wpf.Controls
  nameWithType: neo_bpsys_wpf.Controls
  fullName: neo_bpsys_wpf.Controls
  spec.csharp:
  - uid: neo_bpsys_wpf
    name: neo_bpsys_wpf
    href: neo_bpsys_wpf.html
  - name: .
  - uid: neo_bpsys_wpf.Controls
    name: Controls
    href: neo_bpsys_wpf.Controls.html
  spec.vb:
  - uid: neo_bpsys_wpf
    name: neo_bpsys_wpf
    href: neo_bpsys_wpf.html
  - name: .
  - uid: neo_bpsys_wpf.Controls
    name: Controls
    href: neo_bpsys_wpf.Controls.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Windows.Threading.DispatcherObject
  commentId: T:System.Windows.Threading.DispatcherObject
  parent: System.Windows.Threading
  isExternal: true
  name: DispatcherObject
  nameWithType: DispatcherObject
  fullName: System.Windows.Threading.DispatcherObject
- uid: System.Windows.DependencyObject
  commentId: T:System.Windows.DependencyObject
  parent: System.Windows
  isExternal: true
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Media.Visual
  commentId: T:System.Windows.Media.Visual
  parent: System.Windows.Media
  isExternal: true
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
- uid: System.Windows.UIElement
  commentId: T:System.Windows.UIElement
  parent: System.Windows
  isExternal: true
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement
- uid: System.Windows.FrameworkElement
  commentId: T:System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: true
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.Controls.Control
  commentId: T:System.Windows.Controls.Control
  parent: System.Windows.Controls
  isExternal: true
  name: Control
  nameWithType: Control
  fullName: System.Windows.Controls.Control
- uid: System.Windows.Controls.ContentControl
  commentId: T:System.Windows.Controls.ContentControl
  parent: System.Windows.Controls
  isExternal: true
  name: ContentControl
  nameWithType: ContentControl
  fullName: System.Windows.Controls.ContentControl
- uid: System.Windows.Controls.UserControl
  commentId: T:System.Windows.Controls.UserControl
  parent: System.Windows.Controls
  isExternal: true
  name: UserControl
  nameWithType: UserControl
  fullName: System.Windows.Controls.UserControl
- uid: System.ComponentModel.ISupportInitialize
  commentId: T:System.ComponentModel.ISupportInitialize
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.isupportinitialize
  name: ISupportInitialize
  nameWithType: ISupportInitialize
  fullName: System.ComponentModel.ISupportInitialize
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanging
  commentId: T:System.ComponentModel.INotifyPropertyChanging
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanging
  name: INotifyPropertyChanging
  nameWithType: INotifyPropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Threading
  commentId: N:System.Windows.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Windows.Threading
  nameWithType: System.Windows.Threading
  fullName: System.Windows.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.threading
- uid: System.Windows
  commentId: N:System.Windows
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
- uid: System.Windows.Media
  commentId: N:System.Windows.Media
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Windows.Media
  nameWithType: System.Windows.Media
  fullName: System.Windows.Media
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Media
    name: Media
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.media
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Media
    name: Media
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.media
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Controls
    name: Controls
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.controls
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Controls
    name: Controls
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.controls
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.#ctor*
  commentId: Overload:neo_bpsys_wpf.Controls.TextSettingsEditControl.#ctor
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl__ctor_System_Collections_Generic_List_System_Windows_Media_FontFamily__neo_bpsys_wpf_Models_TextSettings_System_Action_System_Action_System_Action_
  name: TextSettingsEditControl
  nameWithType: TextSettingsEditControl.TextSettingsEditControl
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.TextSettingsEditControl
  nameWithType.vb: TextSettingsEditControl.New
  fullName.vb: neo_bpsys_wpf.Controls.TextSettingsEditControl.New
  name.vb: New
- uid: System.Collections.Generic.List{System.Windows.Media.FontFamily}
  commentId: T:System.Collections.Generic.List{System.Windows.Media.FontFamily}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<FontFamily>
  nameWithType: List<FontFamily>
  fullName: System.Collections.Generic.List<System.Windows.Media.FontFamily>
  nameWithType.vb: List(Of FontFamily)
  fullName.vb: System.Collections.Generic.List(Of System.Windows.Media.FontFamily)
  name.vb: List(Of FontFamily)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Windows.Media.FontFamily
    name: FontFamily
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Windows.Media.FontFamily
    name: FontFamily
    isExternal: true
  - name: )
- uid: neo_bpsys_wpf.Models.TextSettings
  commentId: T:neo_bpsys_wpf.Models.TextSettings
  parent: neo_bpsys_wpf.Models
  href: neo_bpsys_wpf.Models.TextSettings.html
  name: TextSettings
  nameWithType: TextSettings
  fullName: neo_bpsys_wpf.Models.TextSettings
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: neo_bpsys_wpf.Models
  commentId: N:neo_bpsys_wpf.Models
  href: neo_bpsys_wpf.html
  name: neo_bpsys_wpf.Models
  nameWithType: neo_bpsys_wpf.Models
  fullName: neo_bpsys_wpf.Models
  spec.csharp:
  - uid: neo_bpsys_wpf
    name: neo_bpsys_wpf
    href: neo_bpsys_wpf.html
  - name: .
  - uid: neo_bpsys_wpf.Models
    name: Models
    href: neo_bpsys_wpf.Models.html
  spec.vb:
  - uid: neo_bpsys_wpf
    name: neo_bpsys_wpf
    href: neo_bpsys_wpf.html
  - name: .
  - uid: neo_bpsys_wpf.Models
    name: Models
    href: neo_bpsys_wpf.Models.html
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.FontWeightList*
  commentId: Overload:neo_bpsys_wpf.Controls.TextSettingsEditControl.FontWeightList
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_FontWeightList
  name: FontWeightList
  nameWithType: TextSettingsEditControl.FontWeightList
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.FontWeightList
- uid: System.Collections.Generic.List{System.Windows.FontWeight}
  commentId: T:System.Collections.Generic.List{System.Windows.FontWeight}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<FontWeight>
  nameWithType: List<FontWeight>
  fullName: System.Collections.Generic.List<System.Windows.FontWeight>
  nameWithType.vb: List(Of FontWeight)
  fullName.vb: System.Collections.Generic.List(Of System.Windows.FontWeight)
  name.vb: List(Of FontWeight)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Windows.FontWeight
    name: FontWeight
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Windows.FontWeight
    name: FontWeight
    isExternal: true
  - name: )
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.InitializeComponent*
  commentId: Overload:neo_bpsys_wpf.Controls.TextSettingsEditControl.InitializeComponent
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_InitializeComponent
  name: InitializeComponent
  nameWithType: TextSettingsEditControl.InitializeComponent
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.InitializeComponent
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.FontList*
  commentId: Overload:neo_bpsys_wpf.Controls.TextSettingsEditControl.FontList
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_FontList
  name: FontList
  nameWithType: TextSettingsEditControl.FontList
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.FontList
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedColor*
  commentId: Overload:neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedColor
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SelectedColor
  name: SelectedColor
  nameWithType: TextSettingsEditControl.SelectedColor
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedColor
- uid: System.Windows.Media.Color
  commentId: T:System.Windows.Media.Color
  parent: System.Windows.Media
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: System.Windows.Media.Color
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontFamily*
  commentId: Overload:neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontFamily
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SelectedFontFamily
  name: SelectedFontFamily
  nameWithType: TextSettingsEditControl.SelectedFontFamily
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontFamily
- uid: System.Windows.Media.FontFamily
  commentId: T:System.Windows.Media.FontFamily
  parent: System.Windows.Media
  isExternal: true
  name: FontFamily
  nameWithType: FontFamily
  fullName: System.Windows.Media.FontFamily
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontSize*
  commentId: Overload:neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontSize
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SelectedFontSize
  name: SelectedFontSize
  nameWithType: TextSettingsEditControl.SelectedFontSize
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontSize
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontWeight*
  commentId: Overload:neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontWeight
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SelectedFontWeight
  name: SelectedFontWeight
  nameWithType: TextSettingsEditControl.SelectedFontWeight
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SelectedFontWeight
- uid: System.Windows.FontWeight
  commentId: T:System.Windows.FontWeight
  parent: System.Windows
  isExternal: true
  name: FontWeight
  nameWithType: FontWeight
  fullName: System.Windows.FontWeight
- uid: CommunityToolkit.Mvvm.Input.IRelayCommand
  commentId: T:CommunityToolkit.Mvvm.Input.IRelayCommand
  parent: CommunityToolkit.Mvvm.Input
  isExternal: true
  name: IRelayCommand
  nameWithType: IRelayCommand
  fullName: CommunityToolkit.Mvvm.Input.IRelayCommand
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.Save
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.Save
  name: Save()
  nameWithType: TextSettingsEditControl.Save()
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.Save()
  spec.csharp:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.Save
    name: Save
  - name: (
  - name: )
  spec.vb:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.Save
    name: Save
  - name: (
  - name: )
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SaveCommand*
  commentId: Overload:neo_bpsys_wpf.Controls.TextSettingsEditControl.SaveCommand
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SaveCommand
  name: SaveCommand
  nameWithType: TextSettingsEditControl.SaveCommand
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SaveCommand
- uid: CommunityToolkit.Mvvm.Input
  commentId: N:CommunityToolkit.Mvvm.Input
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/communitytoolkit
  name: CommunityToolkit.Mvvm.Input
  nameWithType: CommunityToolkit.Mvvm.Input
  fullName: CommunityToolkit.Mvvm.Input
  spec.csharp:
  - uid: CommunityToolkit
    name: CommunityToolkit
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/communitytoolkit
  - name: .
  - uid: CommunityToolkit.Mvvm
    name: Mvvm
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/communitytoolkit.mvvm
  - name: .
  - uid: CommunityToolkit.Mvvm.Input
    name: Input
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/communitytoolkit.mvvm.input
  spec.vb:
  - uid: CommunityToolkit
    name: CommunityToolkit
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/communitytoolkit
  - name: .
  - uid: CommunityToolkit.Mvvm
    name: Mvvm
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/communitytoolkit.mvvm
  - name: .
  - uid: CommunityToolkit.Mvvm.Input
    name: Input
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/communitytoolkit.mvvm.input
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.Close
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.Close
  name: Close()
  nameWithType: TextSettingsEditControl.Close()
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.Close()
  spec.csharp:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.Close
    name: Close
  - name: (
  - name: )
  spec.vb:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.Close
    name: Close
  - name: (
  - name: )
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.CloseCommand*
  commentId: Overload:neo_bpsys_wpf.Controls.TextSettingsEditControl.CloseCommand
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_CloseCommand
  name: CloseCommand
  nameWithType: TextSettingsEditControl.CloseCommand
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.CloseCommand
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.Apply
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.Apply
  name: Apply()
  nameWithType: TextSettingsEditControl.Apply()
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.Apply()
  spec.csharp:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.Apply
    name: Apply
  - name: (
  - name: )
  spec.vb:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.Apply
    name: Apply
  - name: (
  - name: )
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.ApplyCommand*
  commentId: Overload:neo_bpsys_wpf.Controls.TextSettingsEditControl.ApplyCommand
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_ApplyCommand
  name: ApplyCommand
  nameWithType: TextSettingsEditControl.ApplyCommand
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.ApplyCommand
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged.propertychanged
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangedeventhandler
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  commentId: E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  parent: System.ComponentModel.INotifyPropertyChanging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanging.propertychanging
  name: PropertyChanging
  nameWithType: INotifyPropertyChanging.PropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging.PropertyChanging
- uid: System.ComponentModel.PropertyChangingEventHandler
  commentId: T:System.ComponentModel.PropertyChangingEventHandler
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangingeventhandler
  name: PropertyChangingEventHandler
  nameWithType: PropertyChangingEventHandler
  fullName: System.ComponentModel.PropertyChangingEventHandler
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged
  commentId: E:neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_PropertyChanged
  name: PropertyChanged
  nameWithType: TextSettingsEditControl.PropertyChanged
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventArgs
  commentId: T:System.ComponentModel.PropertyChangedEventArgs
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangedeventargs
  name: PropertyChangedEventArgs
  nameWithType: PropertyChangedEventArgs
  fullName: System.ComponentModel.PropertyChangedEventArgs
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanged*
  commentId: Overload:neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanged
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_OnPropertyChanged_System_ComponentModel_PropertyChangedEventArgs_
  name: OnPropertyChanged
  nameWithType: TextSettingsEditControl.OnPropertyChanged
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanged
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging
  commentId: E:neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_PropertyChanging
  name: PropertyChanging
  nameWithType: TextSettingsEditControl.PropertyChanging
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.PropertyChanging
- uid: System.ComponentModel.PropertyChangingEventArgs
  commentId: T:System.ComponentModel.PropertyChangingEventArgs
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangingeventargs
  name: PropertyChangingEventArgs
  nameWithType: PropertyChangingEventArgs
  fullName: System.ComponentModel.PropertyChangingEventArgs
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanging*
  commentId: Overload:neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanging
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_OnPropertyChanging_System_ComponentModel_PropertyChangingEventArgs_
  name: OnPropertyChanging
  nameWithType: TextSettingsEditControl.OnPropertyChanging
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.OnPropertyChanging
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty*
  commentId: Overload:neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SetProperty__1___0____0_System_String_
  name: SetProperty
  nameWithType: TextSettingsEditControl.SetProperty
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``1(``0@,``0,System.String)
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``1(``0@,``0,System.String)
  isExternal: true
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SetProperty__1___0____0_System_String_
  name: SetProperty<T>(ref T, T, string)
  nameWithType: TextSettingsEditControl.SetProperty<T>(ref T, T, string)
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty<T>(ref T, T, string)
  nameWithType.vb: TextSettingsEditControl.SetProperty(Of T)(T, T, String)
  fullName.vb: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty(Of T)(T, T, String)
  name.vb: SetProperty(Of T)(T, T, String)
  spec.csharp:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``1(``0@,``0,System.String)
    name: SetProperty
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SetProperty__1___0____0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``1(``0@,``0,System.String)
    name: SetProperty
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SetProperty__1___0____0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEqualityComparer{{T}}
  commentId: T:System.Collections.Generic.IEqualityComparer{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``2(``1,``1,``0,System.Action{``0,``1},System.String)
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``2(``1,``1,``0,System.Action{``0,``1},System.String)
  isExternal: true
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SetProperty__2___1___1___0_System_Action___0___1__System_String_
  name: SetProperty<TModel, T>(T, T, TModel, Action<TModel, T>, string)
  nameWithType: TextSettingsEditControl.SetProperty<TModel, T>(T, T, TModel, Action<TModel, T>, string)
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty<TModel, T>(T, T, TModel, System.Action<TModel, T>, string)
  nameWithType.vb: TextSettingsEditControl.SetProperty(Of TModel, T)(T, T, TModel, Action(Of TModel, T), String)
  fullName.vb: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty(Of TModel, T)(T, T, TModel, System.Action(Of TModel, T), String)
  name.vb: SetProperty(Of TModel, T)(T, T, TModel, Action(Of TModel, T), String)
  spec.csharp:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``2(``1,``1,``0,System.Action{``0,``1},System.String)
    name: SetProperty
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SetProperty__2___1___1___0_System_Action___0___1__System_String_
  - name: <
  - name: TModel
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: TModel
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``2(``1,``1,``0,System.Action{``0,``1},System.String)
    name: SetProperty
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SetProperty__2___1___1___0_System_Action___0___1__System_String_
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: ','
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: ','
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Action{{T}}
  commentId: T:System.Action{``0}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``1(``0,``0,System.Action{``0},System.String)
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``1(``0,``0,System.Action{``0},System.String)
  isExternal: true
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SetProperty__1___0___0_System_Action___0__System_String_
  name: SetProperty<T>(T, T, Action<T>, string)
  nameWithType: TextSettingsEditControl.SetProperty<T>(T, T, Action<T>, string)
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty<T>(T, T, System.Action<T>, string)
  nameWithType.vb: TextSettingsEditControl.SetProperty(Of T)(T, T, Action(Of T), String)
  fullName.vb: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty(Of T)(T, T, System.Action(Of T), String)
  name.vb: SetProperty(Of T)(T, T, Action(Of T), String)
  spec.csharp:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``1(``0,``0,System.Action{``0},System.String)
    name: SetProperty
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SetProperty__1___0___0_System_Action___0__System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetProperty``1(``0,``0,System.Action{``0},System.String)
    name: SetProperty
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SetProperty__1___0___0_System_Action___0__System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: '{TModel}'
  commentId: '!:TModel'
  definition: TModel
  name: TModel
  nameWithType: TModel
  fullName: TModel
- uid: System.Action{{TModel},{T}}
  commentId: T:System.Action{``0,``1}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<TModel, T>
  nameWithType: Action<TModel, T>
  fullName: System.Action<TModel, T>
  nameWithType.vb: Action(Of TModel, T)
  fullName.vb: System.Action(Of TModel, T)
  name.vb: Action(Of TModel, T)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: TModel
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TModel
  name: TModel
  nameWithType: TModel
  fullName: TModel
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier
  commentId: T:neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier
  parent: neo_bpsys_wpf.Controls
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html
  name: TextSettingsEditControl.TaskNotifier
  nameWithType: TextSettingsEditControl.TaskNotifier
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier
  spec.csharp:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl
    name: TextSettingsEditControl
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html
  - name: .
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier
    name: TaskNotifier
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier.html
  spec.vb:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl
    name: TextSettingsEditControl
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html
  - name: .
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier
    name: TaskNotifier
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier.html
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion*
  commentId: Overload:neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SetPropertyAndNotifyOnCompletion_neo_bpsys_wpf_Controls_TextSettingsEditControl_TaskNotifier__System_Threading_Tasks_Task_System_String_
  name: SetPropertyAndNotifyOnCompletion
  nameWithType: TextSettingsEditControl.SetPropertyAndNotifyOnCompletion
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier@,System.Threading.Tasks.Task,System.String)
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier@,System.Threading.Tasks.Task,System.String)
  isExternal: true
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SetPropertyAndNotifyOnCompletion_neo_bpsys_wpf_Controls_TextSettingsEditControl_TaskNotifier__System_Threading_Tasks_Task_System_String_
  name: SetPropertyAndNotifyOnCompletion(ref TaskNotifier, Task, string)
  nameWithType: TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(ref TextSettingsEditControl.TaskNotifier, Task, string)
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(ref neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier, System.Threading.Tasks.Task, string)
  nameWithType.vb: TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(TextSettingsEditControl.TaskNotifier, Task, String)
  fullName.vb: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier, System.Threading.Tasks.Task, String)
  name.vb: SetPropertyAndNotifyOnCompletion(TaskNotifier, Task, String)
  spec.csharp:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier@,System.Threading.Tasks.Task,System.String)
    name: SetPropertyAndNotifyOnCompletion
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SetPropertyAndNotifyOnCompletion_neo_bpsys_wpf_Controls_TextSettingsEditControl_TaskNotifier__System_Threading_Tasks_Task_System_String_
  - name: (
  - name: ref
  - name: " "
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier
    name: TaskNotifier
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier.html
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier@,System.Threading.Tasks.Task,System.String)
    name: SetPropertyAndNotifyOnCompletion
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SetPropertyAndNotifyOnCompletion_neo_bpsys_wpf_Controls_TextSettingsEditControl_TaskNotifier__System_Threading_Tasks_Task_System_String_
  - name: (
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier
    name: TaskNotifier
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier.html
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Action{System.Threading.Tasks.Task}
  commentId: T:System.Action{System.Threading.Tasks.Task}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Task>
  nameWithType: Action<Task>
  fullName: System.Action<System.Threading.Tasks.Task>
  nameWithType.vb: Action(Of Task)
  fullName.vb: System.Action(Of System.Threading.Tasks.Task)
  name.vb: Action(Of Task)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: )
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier`1
  commentId: T:neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier`1
  parent: neo_bpsys_wpf.Controls
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html
  name: TextSettingsEditControl.TaskNotifier<T>
  nameWithType: TextSettingsEditControl.TaskNotifier<T>
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier<T>
  nameWithType.vb: TextSettingsEditControl.TaskNotifier(Of T)
  fullName.vb: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier(Of T)
  name.vb: TextSettingsEditControl.TaskNotifier(Of T)
  spec.csharp:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl
    name: TextSettingsEditControl
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html
  - name: .
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier`1
    name: TaskNotifier
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl
    name: TextSettingsEditControl
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html
  - name: .
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier`1
    name: TaskNotifier
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier{{T}}
  commentId: T:neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier{``0}
  parent: neo_bpsys_wpf.Controls
  definition: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier`1
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html
  name: TextSettingsEditControl.TaskNotifier<T>
  nameWithType: TextSettingsEditControl.TaskNotifier<T>
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier<T>
  nameWithType.vb: TextSettingsEditControl.TaskNotifier(Of T)
  fullName.vb: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier(Of T)
  name.vb: TextSettingsEditControl.TaskNotifier(Of T)
  spec.csharp:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl
    name: TextSettingsEditControl
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html
  - name: .
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier`1
    name: TaskNotifier
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl
    name: TextSettingsEditControl
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html
  - name: .
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier`1
    name: TaskNotifier
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion``1(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier{``0}@,System.Threading.Tasks.Task{``0},System.String)
  commentId: M:neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion``1(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier{``0}@,System.Threading.Tasks.Task{``0},System.String)
  isExternal: true
  href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SetPropertyAndNotifyOnCompletion__1_neo_bpsys_wpf_Controls_TextSettingsEditControl_TaskNotifier___0___System_Threading_Tasks_Task___0__System_String_
  name: SetPropertyAndNotifyOnCompletion<T>(ref TaskNotifier<T>, Task<T>, string)
  nameWithType: TextSettingsEditControl.SetPropertyAndNotifyOnCompletion<T>(ref TextSettingsEditControl.TaskNotifier<T>, Task<T>, string)
  fullName: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion<T>(ref neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier<T>, System.Threading.Tasks.Task<T>, string)
  nameWithType.vb: TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(Of T)(TextSettingsEditControl.TaskNotifier(Of T), Task(Of T), String)
  fullName.vb: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion(Of T)(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier(Of T), System.Threading.Tasks.Task(Of T), String)
  name.vb: SetPropertyAndNotifyOnCompletion(Of T)(TaskNotifier(Of T), Task(Of T), String)
  spec.csharp:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion``1(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier{``0}@,System.Threading.Tasks.Task{``0},System.String)
    name: SetPropertyAndNotifyOnCompletion
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SetPropertyAndNotifyOnCompletion__1_neo_bpsys_wpf_Controls_TextSettingsEditControl_TaskNotifier___0___System_Threading_Tasks_Task___0__System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: ref
  - name: " "
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier`1
    name: TaskNotifier
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier-1.html
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.SetPropertyAndNotifyOnCompletion``1(neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier{``0}@,System.Threading.Tasks.Task{``0},System.String)
    name: SetPropertyAndNotifyOnCompletion
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.html#neo_bpsys_wpf_Controls_TextSettingsEditControl_SetPropertyAndNotifyOnCompletion__1_neo_bpsys_wpf_Controls_TextSettingsEditControl_TaskNotifier___0___System_Threading_Tasks_Task___0__System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier`1
    name: TaskNotifier
    href: neo_bpsys_wpf.Controls.TextSettingsEditControl.TaskNotifier-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Action{System.Threading.Tasks.Task{{T}}}
  commentId: T:System.Action{System.Threading.Tasks.Task{``0}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Task<T>>
  nameWithType: Action<Task<T>>
  fullName: System.Action<System.Threading.Tasks.Task<T>>
  nameWithType.vb: Action(Of Task(Of T))
  fullName.vb: System.Action(Of System.Threading.Tasks.Task(Of T))
  name.vb: Action(Of Task(Of T))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
