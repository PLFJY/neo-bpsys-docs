### YamlMime:ManagedReference
items:
- uid: neo_bpsys_wpf.Services.ApplicationHostService
  commentId: T:neo_bpsys_wpf.Services.ApplicationHostService
  id: ApplicationHostService
  parent: neo_bpsys_wpf.Services
  children:
  - neo_bpsys_wpf.Services.ApplicationHostService.#ctor(System.IServiceProvider)
  - neo_bpsys_wpf.Services.ApplicationHostService.StartAsync(System.Threading.CancellationToken)
  - neo_bpsys_wpf.Services.ApplicationHostService.StopAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ApplicationHostService
  nameWithType: ApplicationHostService
  fullName: neo_bpsys_wpf.Services.ApplicationHostService
  type: Class
  source:
    remote:
      path: neo-bpsys-wpf/Services/ApplicationHostService.cs
      branch: dev-feat/MapBpV2
      repo: https://github.com/plfjy/neo-bpsys-wpf.git
    id: ApplicationHostService
    path: ../neo-bpsys-wpf/neo-bpsys-wpf/Services/ApplicationHostService.cs
    startLine: 15
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Services
  summary: 应用程序启动服务，包含导航页面预加载
  example: []
  syntax:
    content: 'public class ApplicationHostService : IHostedService'
    content.vb: Public Class ApplicationHostService Implements IHostedService
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.Hosting.IHostedService
- uid: neo_bpsys_wpf.Services.ApplicationHostService.#ctor(System.IServiceProvider)
  commentId: M:neo_bpsys_wpf.Services.ApplicationHostService.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: neo_bpsys_wpf.Services.ApplicationHostService
  langs:
  - csharp
  - vb
  name: ApplicationHostService(IServiceProvider)
  nameWithType: ApplicationHostService.ApplicationHostService(IServiceProvider)
  fullName: neo_bpsys_wpf.Services.ApplicationHostService.ApplicationHostService(System.IServiceProvider)
  type: Constructor
  source:
    remote:
      path: neo-bpsys-wpf/Services/ApplicationHostService.cs
      branch: dev-feat/MapBpV2
      repo: https://github.com/plfjy/neo-bpsys-wpf.git
    id: .ctor
    path: ../neo-bpsys-wpf/neo-bpsys-wpf/Services/ApplicationHostService.cs
    startLine: 15
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Services
  summary: 应用程序启动服务，包含导航页面预加载
  example: []
  syntax:
    content: public ApplicationHostService(IServiceProvider serviceProvider)
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: ''
    content.vb: Public Sub New(serviceProvider As IServiceProvider)
  overload: neo_bpsys_wpf.Services.ApplicationHostService.#ctor*
  nameWithType.vb: ApplicationHostService.New(IServiceProvider)
  fullName.vb: neo_bpsys_wpf.Services.ApplicationHostService.New(System.IServiceProvider)
  name.vb: New(IServiceProvider)
- uid: neo_bpsys_wpf.Services.ApplicationHostService.StartAsync(System.Threading.CancellationToken)
  commentId: M:neo_bpsys_wpf.Services.ApplicationHostService.StartAsync(System.Threading.CancellationToken)
  id: StartAsync(System.Threading.CancellationToken)
  parent: neo_bpsys_wpf.Services.ApplicationHostService
  langs:
  - csharp
  - vb
  name: StartAsync(CancellationToken)
  nameWithType: ApplicationHostService.StartAsync(CancellationToken)
  fullName: neo_bpsys_wpf.Services.ApplicationHostService.StartAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: neo-bpsys-wpf/Services/ApplicationHostService.cs
      branch: dev-feat/MapBpV2
      repo: https://github.com/plfjy/neo-bpsys-wpf.git
    id: StartAsync
    path: ../neo-bpsys-wpf/neo-bpsys-wpf/Services/ApplicationHostService.cs
    startLine: 19
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Services
  summary: Triggered when the application host is ready to start the service.
  example: []
  syntax:
    content: public Task StartAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Indicates that the start process has been aborted.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous Start operation.
    content.vb: Public Function StartAsync(cancellationToken As CancellationToken) As Task
  overload: neo_bpsys_wpf.Services.ApplicationHostService.StartAsync*
  implements:
  - Microsoft.Extensions.Hosting.IHostedService.StartAsync(System.Threading.CancellationToken)
- uid: neo_bpsys_wpf.Services.ApplicationHostService.StopAsync(System.Threading.CancellationToken)
  commentId: M:neo_bpsys_wpf.Services.ApplicationHostService.StopAsync(System.Threading.CancellationToken)
  id: StopAsync(System.Threading.CancellationToken)
  parent: neo_bpsys_wpf.Services.ApplicationHostService
  langs:
  - csharp
  - vb
  name: StopAsync(CancellationToken)
  nameWithType: ApplicationHostService.StopAsync(CancellationToken)
  fullName: neo_bpsys_wpf.Services.ApplicationHostService.StopAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: neo-bpsys-wpf/Services/ApplicationHostService.cs
      branch: dev-feat/MapBpV2
      repo: https://github.com/plfjy/neo-bpsys-wpf.git
    id: StopAsync
    path: ../neo-bpsys-wpf/neo-bpsys-wpf/Services/ApplicationHostService.cs
    startLine: 24
  assemblies:
  - neo-bpsys-wpf
  namespace: neo_bpsys_wpf.Services
  summary: Triggered when the application host is performing a graceful shutdown.
  example: []
  syntax:
    content: public Task StopAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Indicates that the shutdown process should no longer be graceful.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous Stop operation.
    content.vb: Public Function StopAsync(cancellationToken As CancellationToken) As Task
  overload: neo_bpsys_wpf.Services.ApplicationHostService.StopAsync*
  implements:
  - Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
references:
- uid: neo_bpsys_wpf.Services
  commentId: N:neo_bpsys_wpf.Services
  href: neo_bpsys_wpf.html
  name: neo_bpsys_wpf.Services
  nameWithType: neo_bpsys_wpf.Services
  fullName: neo_bpsys_wpf.Services
  spec.csharp:
  - uid: neo_bpsys_wpf
    name: neo_bpsys_wpf
    href: neo_bpsys_wpf.html
  - name: .
  - uid: neo_bpsys_wpf.Services
    name: Services
    href: neo_bpsys_wpf.Services.html
  spec.vb:
  - uid: neo_bpsys_wpf
    name: neo_bpsys_wpf
    href: neo_bpsys_wpf.html
  - name: .
  - uid: neo_bpsys_wpf.Services
    name: Services
    href: neo_bpsys_wpf.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Microsoft.Extensions.Hosting.IHostedService
  commentId: T:Microsoft.Extensions.Hosting.IHostedService
  parent: Microsoft.Extensions.Hosting
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice
  name: IHostedService
  nameWithType: IHostedService
  fullName: Microsoft.Extensions.Hosting.IHostedService
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Hosting
  commentId: N:Microsoft.Extensions.Hosting
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Hosting
  nameWithType: Microsoft.Extensions.Hosting
  fullName: Microsoft.Extensions.Hosting
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Hosting
    name: Hosting
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Hosting
    name: Hosting
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting
- uid: neo_bpsys_wpf.Services.ApplicationHostService.#ctor*
  commentId: Overload:neo_bpsys_wpf.Services.ApplicationHostService.#ctor
  href: neo_bpsys_wpf.Services.ApplicationHostService.html#neo_bpsys_wpf_Services_ApplicationHostService__ctor_System_IServiceProvider_
  name: ApplicationHostService
  nameWithType: ApplicationHostService.ApplicationHostService
  fullName: neo_bpsys_wpf.Services.ApplicationHostService.ApplicationHostService
  nameWithType.vb: ApplicationHostService.New
  fullName.vb: neo_bpsys_wpf.Services.ApplicationHostService.New
  name.vb: New
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: neo_bpsys_wpf.Services.ApplicationHostService.StartAsync*
  commentId: Overload:neo_bpsys_wpf.Services.ApplicationHostService.StartAsync
  href: neo_bpsys_wpf.Services.ApplicationHostService.html#neo_bpsys_wpf_Services_ApplicationHostService_StartAsync_System_Threading_CancellationToken_
  name: StartAsync
  nameWithType: ApplicationHostService.StartAsync
  fullName: neo_bpsys_wpf.Services.ApplicationHostService.StartAsync
- uid: Microsoft.Extensions.Hosting.IHostedService.StartAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.IHostedService.StartAsync(System.Threading.CancellationToken)
  parent: Microsoft.Extensions.Hosting.IHostedService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice.startasync
  name: StartAsync(CancellationToken)
  nameWithType: IHostedService.StartAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.IHostedService.StartAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.IHostedService.StartAsync(System.Threading.CancellationToken)
    name: StartAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice.startasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.IHostedService.StartAsync(System.Threading.CancellationToken)
    name: StartAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice.startasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: neo_bpsys_wpf.Services.ApplicationHostService.StopAsync*
  commentId: Overload:neo_bpsys_wpf.Services.ApplicationHostService.StopAsync
  href: neo_bpsys_wpf.Services.ApplicationHostService.html#neo_bpsys_wpf_Services_ApplicationHostService_StopAsync_System_Threading_CancellationToken_
  name: StopAsync
  nameWithType: ApplicationHostService.StopAsync
  fullName: neo_bpsys_wpf.Services.ApplicationHostService.StopAsync
- uid: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  parent: Microsoft.Extensions.Hosting.IHostedService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice.stopasync
  name: StopAsync(CancellationToken)
  nameWithType: IHostedService.StopAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice.stopasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice.stopasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
